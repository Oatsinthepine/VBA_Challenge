Sub Multiple_year_stock_data_task()'Create all required variables    Dim Ticker As String    Dim Percent_Change As Double    Dim Total_Stock_Volume As Double    Dim i As Long    Dim Output_Row_Index As Long 'This variable keep track on where the calculated results will be placed.    Dim Total_Change As Double    Dim last_row As Long    Dim The_First_Ticker_Showed_Eachtime As Long 'This variable keep track on where is the first encounter for each ticker.    Dim ws As Worksheet    'Here we set other variables for later conditional formatting.    Dim cell As Range    Dim last_row_of_J As Long    Dim last_row_of_K As Long    'loop througheach worksheet in the workbook    For Each ws In ThisWorkbook.Worksheets     'Activate the worksheet        ws.Activate    ' Assign the column name to the first cell in each column from "I" to "L"        ws.Range("I1").Value = "Ticker"        ws.Range("J1").Value = "Quarterly Change"        ws.Range("K1").Value = "Percent Change"        ws.Range("L1").Value = "Total Stock Volume"        ' Find the last row of the column of the sheet.        last_row = ws.Cells(Rows.Count, 1).End(xlUp).Row        ' Initialise required variables        The_First_Ticker_Showed_Eachtime = 2 'Because the first ticker shows in the 2nd row        Output_Row_Index = 0 'At beginning it's 0        Total_Stock_Volume = 0        Total_Change = 0        Percent_Change = 0        'looping through each row to extract the content.        For i = 2 To last_row            ' Add the Total_Stock_Volume for each row in the current ticker group            Total_Stock_Volume = Total_Stock_Volume + ws.Cells(i, 7).Value                 ' If the current ticker is not equal to one cell below in the first column.            If ws.Cells(i + 1, 1).Value <> ws.Cells(i, 1).Value Then                'set the ticker to the current cell                Ticker = ws.Cells(i, 1).Value                        ' Get the number of differnece between the last close value and the first open value of the ticker            'As i increment, when it reach to the last ticker in it's group, the i will represent this last ticker's row number            'And The_First_Ticker_Showed_Eachtime will be the row number of the first time this ticker appered.                Total_Change = ws.Cells(i, 6).Value - ws.Cells(The_First_Ticker_Showed_Eachtime, 3).Value                        'Calculate the percentage change by using the total change to divide the initial ticker's open value                Percent_Change = Total_Change / ws.Cells(The_First_Ticker_Showed_Eachtime, 3).Value                    ' Assign the values into the corresponding columns, 2 + Output_Row_Index is because at beginning it's 0, then the first ticker's values will be placed from the second column from I to L, as 0 + 2 = 2            'then as it increment the new ticker will be placed in a sequencial order, one by one below.                ws.Range("I" & 2 + Output_Row_Index).Value = Ticker                ws.Range("J" & 2 + Output_Row_Index).Value = Total_Change                ws.Range("K" & 2 + Output_Row_Index).Value = Percent_Change                ws.Range("L" & 2 + Output_Row_Index).Value = Total_Stock_Volume                        ' Reset variables for new stock ticker if encountered, so the variables need to be reset to 0                Total_Stock_Volume = 0                Total_Change = 0            'when finish the current ticker's output place, it need to increment by 1 as in column I if there is the next different ticker, the output location should be one cell below the last one.                Output_Row_Index = Output_Row_Index + 1                        ' Move to the row of the next ticker's first encounter, this is essential to keep track of the next different ticker, as the first ticker starts at row 2, while looping            ' If a different ticker encountered for the first time, it's location should be the current i + 1, because we are comparing the current cell and the next cell, so if the next cell            ' is different, the new ticker first showed would be +1.                The_First_Ticker_Showed_Eachtime = i + 1                'No need for ElseIf or Else statement, the Total_Stock_Volume is outside of the If statement which accumulates the volume for each row within the current ticker group.        'When the ticker changes, the code within the If block handles the calculations, outputs the results, and resets the variables for the new ticker.            End If    'go to the next row        Next i    ' Find the last row of column J        last_row_of_J = ws.Cells(Rows.Count, "J").End(xlUp).Row        ' Loop through J column for applying conditional formatting based on the cell's value        For Each cell In ws.Range("J2:J" & last_row_of_J)            cell.NumberFormat = "0.00"            If cell.Value > 0 Then                cell.Interior.ColorIndex = 4            ElseIf cell.Value < 0 Then                cell.Interior.ColorIndex = 3            Else                cell.Interior.ColorIndex = 0            End If        Next cell            ' Find the last row of K column        last_row_of_K = ws.Cells(Rows.Count, "K").End(xlUp).Row    ' Loop through each cell in the range K2 to the last row in K        For Each cell In ws.Range("K2:K" & last_row_of_K)        ' Format the number as percentage with 2 decimal places            cell.NumberFormat = "0.00%"        Next cell        'go to the next worksheet    Next ws    End Sub



Sub Bonus()'declear all the required variables first    Dim ws As Worksheet    Dim last_row As Long    Dim greatest_increase As Long    Dim greatest_decrease As Long    Dim largest_volume As Long    Dim greatest_percent_increase As Double    Dim greatest_percent_decrease As Double    Dim max_volume As Double    ' Loop through each worksheet in the workbook    For Each ws In ThisWorkbook.Worksheets        ' Activate the worksheet        ws.Activate        'set the corresponding cell to their name.        ws.Range("P1").Value = "Ticker"        ws.Range("Q1").Value = "Value"        ws.Range("O2").Value = "Greatest % Increase"        ws.Range("O3").Value = "Greatest % Decrease"        ws.Range("O4").Value = "Greatest Total Volume"                ' Find the last row of data in column K (Percent Change) in the current sheet        last_row = ws.Cells(ws.Rows.Count, "K").End(xlUp).Row                ' Using the built-in excel function to get the max and min values for percent change and max volume,        ' as Max() and Min() will returns the required value from the column K.        greatest_percent_increase = Application.WorksheetFunction.Max(ws.Range("K2:K" & last_row))        greatest_percent_decrease = Application.WorksheetFunction.Min(ws.Range("K2:K" & last_row))        max_volume = Application.WorksheetFunction.Max(ws.Range("L2:L" & last_row))                ' Get the row numbers for max increase, decrease and volume. So here using the bult-in Match function, this will        'return the expected value's index/position from a given range that meet the cirteria. However, the match function will start        'from the first row each time, so need to add 1 to the result to ensure it's starts from row 2.        greatest_increase = Application.WorksheetFunction.Match(greatest_percent_increase, ws.Range("K2:K" & last_row), 0) + 1        greatest_decrease = Application.WorksheetFunction.Match(greatest_percent_decrease, ws.Range("K2:K" & last_row), 0) + 1        largest_volume = Application.WorksheetFunction.Match(max_volume, ws.Range("L2:L" & last_row), 0) + 1                ' Place the results in the worksheet and maintain the formating.        ws.Range("P2").Value = ws.Cells(greatest_increase, 9).Value        ws.Range("Q2").Value = Format(greatest_percent_increase, "0.00%")                ws.Range("P3").Value = ws.Cells(greatest_decrease, 9).Value        ws.Range("Q3").Value = Format(greatest_percent_decrease, "0.00%")                ws.Range("P4").Value = ws.Cells(largest_volume, 9).Value        ws.Range("Q4").Value = max_volume            ' Go to the next worksheet    Next wsEnd Sub